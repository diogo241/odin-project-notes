The Flex Shorthand

    -->flex is actually a shorthand for flex-grow, flex-shrink and flex-basis
        --> flex: 1 equates to: flex-grow: 1, flex-shrink: 1, flex-basis: 0
    
    Flex-Grow
        -->When we applied flex: 1 to every div inside our container, we were telling every div to grow the same amount. Todas as divs ficam com o mesmo tamanho.
        -->Se usarmos flex: 2 para apenas uma das divs, essa div será 2 vezes maior que as outras.
    
    Flex-Shrink
        -->Igual à flex grow, sendo que apenas encolhe. 
        -->Flex-shrink only ends up being applied if the size of all flex items is larger than their parent container
            -->3 divs com width: 100px, mas o container é menor que 300px, as divs iam acabar por encolher.
        -->O default shrink value é 1, significando que os items encolhem de igual forma
    
    Flex-Basis
        -->Flex-basis simply sets the initial size of a flex item, so any sort of flex-growing or flex-shrinking starts from that baseline size. The shorthand value defaults to flex-basis: 0%
        -->The reason we had to change it to auto in the flex-shrink example is that with the basis set to 0, those items would ignore the item’s width, and everything would shrink evenly. Using auto as a flex-basis tells the item to check for a width declaration (width: 250px).

            Important Note About Flex-Basis:
                There is a difference between the default value of flex-basis and the way the flex shorthand defines it if no flex-basis is given. The actual default value for flex-basis is auto, but when you specify flex: 1 on an element, it interprets that as flex: 1 1 0. If you want to only adjust an item’s flex-grow you can simply do so directly, without the shorthand. Or you can be more verbose and use the full 3 value shorthand flex: 1 1 auto, which is also equivalent to using flex: auto.
    

    flex: initial
        -->Equivalent to flex: 0 1 auto. (This is the initial value.) Sizes the item based on the width/height properties.

    flex: auto
        -->Equivalent to flex: 1 1 auto. Sizes the item based on the width/height properties, but makes them fully flexible, so that they absorb any free space along the main axis.
    
    flex: none
        -->Equivalent to flex: 0 0 auto. This value sizes the item according to the width/height properties, but makes the flex item fully inflexible. This is similar to initial, except that flex items are not allowed to shrink, even in overflow situations.
    
    flex: <positive-number>
        -->Equivalent to flex: <positive-number> 1 0. Makes the flex item flexible and sets the flex basis to zero, resulting in an item that receives the specified proportion of the free space in the flex container. If all items in the flex container use this pattern, their sizes will be proportional to the specified flex factor.